---
- name: Create VPC
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr_block }}"
    region: "{{ region }}"
    state: present
  register: my_vpc

- name: Print my_vpc
  debug:
    var: my_vpc
  when: verbose

- name: Set Fact vpc_id
  set_fact:
    vpc_id: "{{ my_vpc.vpc.id }}"

- name: Create Subnet
  ec2_vpc_subnet:
    state:  present
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ public_subnet_cidr }}"
    az: "{{ region }}{{ az }}"
    region: "{{ region }}"
    tags:
      Name: "My Subnet"
      cloudforms_managed: true
  register: my_public_subnet

- name: Print my_public_subnet
  debug:
    var: my_public_subnet
  when: verbose

- name: Set Fact subnet_id
  set_fact:
    subnet_id: "{{ my_public_subnet.subnet.id }}"

- name: Create Internet Gateway for VPC
  ec2_vpc_igw:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    state: present
  register: my_vpc_igw

- name: Print my_vpc_igw
  debug:
    var: my_vpc_igw
  when: verbose

- name: Set Fact gateway_id
  set_fact:
    gateway_id: "{{ my_vpc_igw.gateway_id }}"

- name: Create Route Table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    tags:
      Name: "My Route Table"
      cloudforms_managed: true
    subnets:
      - "{{ subnet_id }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ gateway_id }}"
  register: my_route

- name: Print my_route
  debug:
    var: my_route
  when: verbose

- name: Set Fact route_id
  set_fact:
    route_id: "{{ my_route.route_table.id }}"

- name: Print sg_rules
  debug:
    var: sg_rules
  when: verbose

- name: Create Security Group
  ec2_group:
    name: "My Security Group"
    description: "My Security Group"
    vpc_id: "{{ vpc_id }}"
    region: "{{ region }}"
    rules: "{{ sg_rules }}"
  register: my_security_group

- name: Print my_security_group
  debug:
    var: my_security_group
  when: verbose

- name: Set group_id
  set_fact:
    group_id: "{{ my_security_group.group_id }}"

- name: Modify Service Description
  uri:
    url: "{{ manageiq.api_url }}/api/{{ manageiq.service }}"
    method: POST
    body:
      action: edit
      resource:
        description: "{{ vpc_name }}"
    body_format: json
    validate_certs: False
    headers:
      X-Auth-Token: "{{ manageiq.api_token }}"
      Content-Type: "application/json"
    status_code: 200
  register: service_output
  when: manageiq is defined

- name: Print service_output
  debug:
    var: service_output
  when: verbose and manageiq is defined
